||  DiZZy v0.1, dead slow Z80 assembler tools, (c) 2017 Michael Hoffmeister
||  Loading tables z80_isa.csv, z80_syms.csv..
||  Assembling mini.asm..
||  Starting assemble stage 1 for: mini.asm..
*MARK@STAGE1*
In mini.asm(297) E0119: Jump target to far away for RELATIVE jump! Skipping!
||  Stage 1 completed.
||  Starting assemble stage 2 ..
0000:         |;------------------------------
0000:         |ENTRY   EQU     5               ;entry point for the cp/m bdos.
0000:         |TFCA    EQU     5CH             ;default file control block.
0000:         |TFCB    EQU     TFCA+1
0000:         |;------------------------------
0000:         |        ORG 100h
0100:         |        ;
0100:         |hallo:  ; START
0100:         |        ; EXX
0100: 015a44  |        LD      BC,$445a                                        |Register pair <- nn
0103: 11a23d  |        LD      DE,$3da2                                        |Register pair <- nn
0106: 215988  |        LD      HL,$8859                                        |Register pair <- nn
0109: d9      |        EXX                                                     |(BC) <-> (BC'), (DE) <-> (DE'), (HL) <-> (HL')
010a: 00      |        NOP                     ; ASSERT B = $00, C = $00, D = …|--
010e:         |                                  $00, E = $00, H = $00, L = $00
010b: 018809  |        LD      BC,$0988                                        |Register pair <- nn
010e: 110093  |        LD      DE,$9300                                        |Register pair <- nn
0111: 21e700  |        LD      HL,$00e7                                        |Register pair <- nn
0114: d9      |        EXX                                                     |(BC) <-> (BC'), (DE) <-> (DE'), (HL) <-> (HL')
0115: 00      |        NOP                     ; ASSERT B = $44, C = $5a, D = …|--
0119:         |                                  $3d, E = $a2, H = $88, L = $59
0116: d9      |        EXX                                                     |(BC) <-> (BC'), (DE) <-> (DE'), (HL) <-> (HL')
0117: 00      |        NOP                     ; ASSERT B = $09, C = $88, D = …|--
011b:         |                                  $93, E = $00, H = $00, L = $e7
0118:         |        ; EX AF,AF'
0118: 3e55    |        LD      A,$55                                           |r <- n
011a: 37      |        SCF                                                     |CY <- 1
011b: 08      |        EX      AF,AF'                                          |AF <-> AF'
011c: 00      |        NOP                     ; ASSERT A = $00, CY clear      |--
011d: 3eaa    |        LD      A,$aa                                           |r <- n
011f: 08      |        EX      AF,AF'                                          |AF <-> AF'
0120: 00      |        NOP                     ; ASSERT A = $55, CY set        |--
0121: 08      |        EX      AF,AF'                                          |AF <-> AF'
0122: 00      |        NOP                     ; ASSERT A = $aa, CY clear      |--
0123:         |        ; EX DE.HL
0123: 113412  |        LD      DE,$1234                                        |Register pair <- nn
0126: 217856  |        LD      HL,$5678                                        |Register pair <- nn
0129: eb      |        EX      DE,HL                                           |DE <-> HL
012a: 00      |        NOP                     ; ASSERT D = $56, E = $78, H = …|--
012e:         |                                                    $12, L = $34
012b:         |        ; RRD
012b:*210006  |        LD      HL,buftmp                                       |Register pair <- nn
012e: 3620    |        LD      (HL),00100000b                                  |(HL) <- n
0130: 3e84    |        LD      A,10000100b                                     |r <- n
0132: ed67    |        RRD                                                     |[ A, (HL) ] <- [ A[7..4], (HL)[3..0], A[3..0], (HL)[7.4] ]
0134: 46      |        LD      B,(HL)          ; ASSERT B = $42                |r <- (HL)
0135: 4f      |        LD      C,A             ; ASSERT C = $80                |r <- s
0136:         |        ; RLD
0136:*210006  |        LD      HL,buftmp                                       |Register pair <- nn
0139: 3631    |        LD      (HL),00110001b                                  |(HL) <- n
013b: 3e7a    |        LD      A,01111010b                                     |r <- n
013d: ed6f    |        RLD                                                     |[ A, (HL) ] <- [ A[7..4], (HL)[7..4], (HL)[3..0], A[3..0] ]
013f: 46      |        LD      B,(HL)          ; ASSERT B = $1a                |r <- (HL)
0140: 4f      |        LD      C,A             ; ASSERT C = $73                |r <- s
0141:         |        ; SRL in multiple ways
0141: b7      |        OR      A               ; clear carry                   |A <- A | r
0142: 3e8f    |        LD      A,10001111b                                     |r <- n
0144: cb3f    |        SRL     A                                               |[r,CY] <- SHR([0,r], 1)
0146: 47      |        LD      B,A                                             |r <- s
0147: 00      |        NOP                     ; ASSERT B = $47, Cy set        |--
0148: b7      |        OR      A               ; clear carry                   |A <- A | r
0149: 3e8f    |        LD      A,10001111b                                     |r <- n
014b:*210006  |        LD      HL,buftmp       ; not a constant one            |Register pair <- nn
014e: 77      |        LD      (HL),A                                          |(HL) <- r
014f: cb3e    |        SRL     (HL)                                            |[ (HL) ,CY] <- SHR([0, (HL) ], 1)
0151: 4e      |        LD      C,(HL)                                          |r <- (HL)
0152: 00      |        NOP                     ; ASSERT C = $47, Cy set        |--
0153: b7      |        OR      A               ; clear carry                   |A <- A | r
0154: 3e8f    |        LD      A,10001111b                                     |r <- n
0156:*fd210006|        LD      IY,buftmp       ; not a constant one            |IY <- nn
015a: fd7701  |        LD      (IY+1),A                                        |(IY+d) <- r
015d: fdcb013e|        SRL     (IY+1)                                          |[ (IY+d) ,CY] <- SHR([0, (IY+d) ], 1)
0161: fd5601  |        LD      D,(IY+1)                                        |r <- (IY+d)
0164: 00      |        NOP                     ; ASSERT D = $47, Cy set        |--
0165:         |        ; SRA in multiple ways
0165: b7      |        OR      A               ; clear carry                   |A <- A | r
0166: 3eb8    |        LD      A,10111000b                                     |r <- n
0168: cb2f    |        SRA     A                                               |[r,CY] <- SHR([r[7],r], 1)
016a: 47      |        LD      B,A                                             |r <- s
016b: 00      |        NOP                     ; ASSERT B = $dc, Cy cleared    |--
016c: b7      |        OR      A               ; clear carry                   |A <- A | r
016d: 3eb8    |        LD      A,10111000b                                     |r <- n
016f:*210006  |        LD      HL,buftmp       ; not a constant one            |Register pair <- nn
0172: 77      |        LD      (HL),A                                          |(HL) <- r
0173: cb2e    |        SRA     (HL)                                            |[ (HL) ,CY] <- SHR([ (HL)[7], (HL) ], 1)
0175: 4e      |        LD      C,(HL)                                          |r <- (HL)
0176: 00      |        NOP                     ; ASSERT C = $dc, Cy cleared    |--
0177: b7      |        OR      A               ; clear carry                   |A <- A | r
0178: 3eb8    |        LD      A,10111000b                                     |r <- n
017a:*fd210006|        LD      IY,buftmp       ; not a constant one            |IY <- nn
017e: fd7701  |        LD      (IY+1),A                                        |(IY+d) <- r
0181: fdcb012e|        SRA     (IY+1)                                          |[ (IY+d) ,CY] <- SHR([ (IY+d)[7], (IY+d) ], 1)
0185: fd5601  |        LD      D,(IY+1)                                        |r <- (IY+d)
0188: 00      |        NOP                     ; ASSERT D = $dc, Cy cleared    |--
0189:         |        ; SLA in multiple ways
0189: b7      |        OR      A               ; clear carry                   |A <- A | r
018a: 3eb1    |        LD      A,10110001b                                     |r <- n
018c: cb27    |        SLA     A                                               |[CY,r] <- SHL([r,0], 1)
018e: 47      |        LD      B,A                                             |r <- s
018f: 00      |        NOP                     ; ASSERT B = $62, Cy set        |--
0190: b7      |        OR      A               ; clear carry                   |A <- A | r
0191: 3eb1    |        LD      A,10110001b                                     |r <- n
0193:*210006  |        LD      HL,buftmp       ; not a constant one            |Register pair <- nn
0196: 77      |        LD      (HL),A                                          |(HL) <- r
0197: cb26    |        SLA     (HL)                                            |[CY, (HL) ] <- SHL([ (HL) ,0], 1)
0199: 4e      |        LD      C,(HL)                                          |r <- (HL)
019a: 00      |        NOP                     ; ASSERT C = $62, Cy set        |--
019b: b7      |        OR      A               ; clear carry                   |A <- A | r
019c: 3eb1    |        LD      A,10110001b                                     |r <- n
019e:*fd210006|        LD      IY,buftmp       ; not a constant one            |IY <- nn
01a2: fd7701  |        LD      (IY+1),A                                        |(IY+d) <- r
01a5: fdcb0126|        SLA     (IY+1)                                          |[CY, (IY+d) ] <- SHL([ (IY+d) ,0], 1)
01a9: fd5601  |        LD      D,(IY+1)                                        |r <- (IY+d)
01ac: 00      |        NOP                     ; ASSERT D = $62, Cy set        |--
01ad:         |        ; RRC further
01ad:*fd210006|        LD      IY,buftmp       ; not a constant one            |IY <- nn
01b1: 3e31    |        LD      A,00110001b                                     |r <- n
01b3: fd7703  |        LD      (IY+3),A                                        |(IY+d) <- r
01b6: b7      |        OR      A               ; clears carry?                 |A <- A | r
01b7: fdcb030e|        RRC     (IY+3)          ; shall by CY, $98              |[CY,(IY+d)] <- ROL([CY,(IY+d)], 1)
01bb: fd4e03  |        LD      C,(IY+3)                                        |r <- (IY+d)
01be: 00      |        NOP                                                     |--
01bf: 00      |        NOP                                                     |--
01c0:         |        ; RR further
01c0:*210006  |        LD      HL,buftmp       ; not a constant one            |Register pair <- nn
01c3: 3edd    |        LD      A,11011101b                                     |r <- n
01c5: 77      |        LD      (HL),A                                          |(HL) <- r
01c6: b7      |        OR      A               ; clears carry?                 |A <- A | r
01c7: cb1e    |        RR      (HL)            ; shall by CY, $6e              |[(HL),CY] <- ROR([(HL),CY], 1)
01c9: 46      |        LD      B,(HL)                                          |r <- (HL)
01ca: 00      |        NOP                                                     |--
01cb: 00      |        NOP                                                     |--
01cc:         |        ; RL further
01cc:*fd210006|        LD      IY,buftmp       ; not a constant one            |IY <- nn
01d0: 3e8f    |        LD      A,10001111b                                     |r <- n
01d2: fd7704  |        LD      (IY+4),A                                        |(IY+d) <- r
01d5: fdcb0416|        RL      (IY+4)          ; shall by CY, $1e              |CY <- (IY+d)[0], (IY+d) <- ROR( (IY+d) ,1)
01d9: fd4602  |        LD      B,(IY+2)                                        |r <- (IY+d)
01dc: 00      |        NOP                                                     |--
01dd: 00      |        NOP                                                     |--
01de: 0688    |        LD      B,10001000b                                     |r <- n
01e0: cb10    |        RL      B               ; shall be CY, %00010001 = $11  |CY <- r[0], r <- ROR(r,1)
01e2: 00      |        NOP                                                     |--
01e3:*210006  |        LD      HL,buftmp       ; not a constant one            |Register pair <- nn
01e6: 3ecc    |        LD      A,11001100b                                     |r <- n
01e8: 77      |        LD      (HL),A                                          |(HL) <- r
01e9: cb16    |        RL      (HL)            ; shall by CY, $99              |CY <- (HL)[0], (HL) <- ROR( (HL) ,1)
01eb: 7e      |        LD      A,(HL)                                          |r <- (HL)
01ec: 00      |        NOP                                                     |--
01ed:         |        ; RLC further
01ed:*fd210006|        LD      IY,buftmp       ; not a constant one            |IY <- nn
01f1: 3ecc    |        LD      A,11001100b                                     |r <- n
01f3: fd7704  |        LD      (IY+4),A                                        |(IY+d) <- r
01f6: fdcb0406|        RLC     (IY+4)          ; shall by CY, $99              |CY <- (IY+d)[7], (IY+d) <- ROL( (IY+d) ,1)
01fa: fd4602  |        LD      B,(IY+2)                                        |r <- (IY+d)
01fd: 00      |        NOP                                                     |--
01fe: 00      |        NOP                                                     |--
01ff: 0688    |        LD      B,10001000b                                     |r <- n
0201: cb00    |        RLC     B               ; shall be CY, %00010001 = $11  |CY <- r[7], r <- ROL(r,1)
0203: 00      |        NOP                                                     |--
0204:*210006  |        LD      HL,buftmp       ; not a constant one            |Register pair <- nn
0207: 3ecc    |        LD      A,11001100b                                     |r <- n
0209: 77      |        LD      (HL),A                                          |(HL) <- r
020a: cb06    |        RLC     (HL)            ; shall by CY, $99              |CY <- (HL)[7], (HL) <- ROL( (HL) ,1)
020c: 7e      |        LD      A,(HL)                                          |r <- (HL)
020d: 00      |        NOP                                                     |--
020e:         |        ; RRA
020e: 3ee1    |        LD      A,11100001b                                     |r <- n
0210: b7      |        OR      A                                               |A <- A | r
0211: 1f      |        RRA                     ; shall be CY, %01110000 = $70  |[A,CY] <- ROR([A,CY], 1)
0212: 00      |        NOP                                                     |--
0213:         |        ; RRCA
0213: 3e11    |        LD      A,00010001b                                     |r <- n
0215: 0f      |        RRCA                    ; shall be CY, %10001000 = $88  |CY <- A[0], A <- ROR(A,1)
0216: 00      |        NOP                                                     |--
0217:         |        ; RLA
0217: 3e76    |        LD      A,01110110b                                     |r <- n
0219: 37      |        SCF                                                     |CY <- 1
021a: 17      |        RLA                     ; shall be no CY, %11101101 = $…|[CY,A] <- ROL([CY,A], 1)
021e:         |                                                              ed
021b: 00      |        NOP                                                     |--
021c:         |        ; RLCA
021c: 3e81    |        LD      A,10000001b                                     |r <- n
021e: 07      |        RLCA                    ; shall be CY, %00000011 = $03  |CY <- A[7], A <- ROL(A,1)
021f: 00      |        NOP                                                     |--
0220:         |        ; XOR
0220: 3e55    |        LD      A, $55                                          |r <- n
0222: 06aa    |        LD      B, $aa                                          |r <- n
0224: a8      |        XOR     B               ; shall be $ff                  |A <- A + r
0225: ee01    |        XOR     $01             ; shall be $fe, Signed          |A <- A + n
0227:*dd211402|        LD      IX,buf7         ; is 43, 44, 45, 255            |IX <- nn
022b: ddae03  |        XOR     (IX+3)          ; $01                           |A <- A + (IX+d)
022e: 00      |        NOP                                                     |--
022f:         |        ; AND
022f: 3eff    |        LD      A, $ff                                          |r <- n
0231: 06aa    |        LD      B, $aa                                          |r <- n
0233: a0      |        AND     B               ; shall be $aa                  |A <- A & r
0234: e622    |        AND      $22            ; shall be $22                  |A <- A & n
0236:*210402  |        LD      HL,buf2         ; is 5                          |Register pair <- nn
0239: a6      |        AND      (HL)           ; $00, Zero                     |A <- A & (HL)
023a: 00      |        NOP                                                     |--
023b:         |        ; OR
023b: 3e55    |        LD      A, $55                                          |r <- n
023d: 06aa    |        LD      B, $aa                                          |r <- n
023f: b0      |        OR      B               ; shall be $ff                  |A <- A | r
0240: 3e11    |        LD      A, $11                                          |r <- n
0242: f688    |        OR      $88             ; shall be $99                  |A <- A | n
0244:*210402  |        LD      HL,buf2         ; is 5                          |Register pair <- nn
0247: b6      |        OR      (HL)            ; $99+5 = $9d                   |A <- A | (HL)
0248: 37      |        SCF                     ; CY is 1                       |CY <- 1
0249: b7      |        OR      A               ; still $9d, but CY is 0        |A <- A | r
024a: 00      |        NOP                                                     |--
024b:         |        ; ADD
024b: 3e2a    |        LD      A,42                                            |r <- n
024d: 47      |        LD      B,A                                             |r <- s
024e: 80      |        ADD     A,B             ; 84, kein Carry                |A <- A + r
024f: 0ee6    |        LD      C,230                                           |r <- n
0251: 81      |        ADD     A,C             ; 84 + 230 -> 58, Carry!        |A <- A + r
0252:         |        ; SUB
0252: 3e3a    |        LD      A,58                                            |r <- n
0254: 1637    |        LD      D,55                                            |r <- n
0256: 92      |        SUB     D               ; shall be 3,                   |A <- A - r
0257: d603    |        SUB     3               ; shall be 0, Sign              |A <- A - n
0259:*dd210002|        LD      IX,buf          ; buf = 1,2,3,4..               |IX <- nn
025d: dd9600  |        SUB     (IX+0)          ; A shall be $ff                |A <- A - (IX+d)
0260:*fd210002|        LD      IY,buf                                          |IY <- nn
0264: fd9601  |        SUB     (IY+1)          ; A shall be $fd                |A <- A + (IY+d)
0267:         |        ; SBC (with Carry)
0267: 3e3b    |        LD      A,59                                            |r <- n
0269: 1637    |        LD      D,55                                            |r <- n
026b: 37      |        SCF                     ; set CY                        |CY <- 1
*MARK@STAGE2*
026c: 9a      |        SBC     A,D             ; shall be 3,                   |A <- A + r + CY
026d: 37      |        SCF                     ; set CY                        |CY <- 1
026e: de03    |        SBC     A,3             ; shall be ff, Carry (Borrow!)  |A <- A + n + CY
0270:*dd210002|        LD      IX,buf          ; buf = 1,2,3,4..               |IX <- nn
0274: dd9e00  |        SBC     A,(IX+0)        ; A shall be $ff                |A <- A + (IX+d) + CY
0277:*fd210002|        LD      IY,buf                                          |IY <- nn
027b: fd9e01  |        SBC     A,(IY+1)        ; A shall be $fd                |A <- A + (IY+d) + CY
027e: c62a    |        ADD     A,42            ; shall be 42 again             |A <- A + n
0280:*211402  |        LD      HL,buf7                                         |Register pair <- nn
0283: 86      |        ADD     A,(HL)          ; 85                            |A <- A + (HL)
0284:*dd211402|        LD      IX,buf7                                         |IX <- nn
0288: dd8602  |        ADD     A,(IX+2)        ; 85 + 45 = 130                 |A <- A + (IX+d)
028b: 00      |        NOP                                                     |--
028c:*dd210002|        LD      IX,buf                                          |IX <- nn
0290: dd4e01  |        LD      C,(IX+1)                                        |r <- (IX+d)
0293:*210402  |        LD      HL,buf2                                         |Register pair <- nn
0296: 71      |        LD      (HL),C                                          |(HL) <- r
0297: 56      |        LD      D,(HL)                                          |r <- (HL)
0298: dd72fe  |        LD      (IX+-2),D                                       |(IX+d) <- r
029b: 365a    |        LD      (HL),$5a                                        |(HL) <- n
029d: dd36fca5|        LD      (IX+-4),$a5                                     |(IX+d) <- n
02a1: 0a      |        LD      A,(BC)                                          |A <- (BC)
02a2: 3e0b    |        LD      A,11                                            |r <- n
02a4:*3a0702  |        LD      A,(buf2+3)                                      |A <- (nn)
02a7: 3e55    |        LD      A,$55                                           |r <- n
02a9:*010002  |        LD      BC,buf                                          |Register pair <- nn
02ac: 02      |        LD      (BC),A                                          |(BC) <- A
02ad: 3e77    |        LD      A,$77                                           |r <- n
02af:*110002  |        LD      DE,buf                                          |Register pair <- nn
02b2: 12      |        LD      (DE),A                                          |(DE) <- A
02b3: 3e99    |        LD      A,$99                                           |r <- n
02b5:*320002  |        LD      (buf),A                                         |(nn) <- A
02b8: 3e32    |        LD      A,$32                                           |r <- n
02ba: ed47    |        LD      I,A                                             |Interrupt vector reg <- A
02bc: 3e43    |        LD      A,$43                                           |r <- n
02be: ed4f    |        LD      R,A                                             |Memory refresh reg <- A
02c0: ed57    |        LD      A,I                     ; A to be $32           |A <- Interrupt vector reg
02c2: ed5f    |        LD      A,R                     ; A to be $43           |A <- Memory refresh reg
02c4:*dd210002|        LD      IX,buf                                          |IX <- nn
02c8: fd21aa55|        LD      IY,$55aa                                        |IY <- nn
02cc:*2a0a02  |        LD      HL,(buf4)               ; HL to be $200         |H <- (nn+1), L <- (nn)
02cf:*ed4b0002|        LD      BC,(buf)                ; BC to be $0201        |RRh <- (nn+1), RRl <- (nn)
02d3:*ed5b0102|        LD      DE,(buf+1)              ; DE to be $0302        |RRh <- (nn+1), RRl <- (nn)
02d7:*ed7b0202|        LD      SP,(buf+2)              ; SP to be $0403        |RRh <- (nn+1), RRl <- (nn)
02db:*dd2a0302|        LD      IX,(buf+3)              ; SP to be $0504        |IXh <- (nn+1), IXl <- (nn)
02df:*fd2a0402|        LD      IY,(buf+4)              ; SP to be $0605        |IYh <- (nn+1), IYl <- (nn)
02e3:*220c02  |        LD      (buf6),HL                                       |(nn+1) <- H, (nn) <- L
02e6:*ed430102|        LD      (buf+1),BC                                      |(nn+1) <- RRh, (nn) <-RRl
02ea:*ed530202|        LD      (buf+2),DE                                      |(nn+1) <- RRh, (nn) <-RRl
02ee:*ed730302|        LD      (buf+3),SP                                      |(nn+1) <- RRh, (nn) <-RRl
02f2:*dd220402|        LD      (buf+4),IX                                      |(nn+1) <- IXh, (nn) <-IXl
02f6:*fd220502|        LD      (buf+5),IY                                      |(nn+1) <- IYh, (nn) <-IYl
02fa: f9      |        LD      SP,HL                                           |SP <- HL
02fb: ddf9    |        LD      SP,IX                                           |SP <- IX
02fd: fdf9    |        LD      SP,IY                                           |SP <- IY
02ff:*314406  |        LD      SP,spend                                        |Register pair <- nn
0302: c5      |        PUSH    BC                                              |(SP-1) <- QQh, (SP-2) <- QQl, SP <- SP - 2
0303: d5      |        PUSH    DE                                              |(SP-1) <- QQh, (SP-2) <- QQl, SP <- SP - 2
0304: e5      |        PUSH    HL                                              |(SP-1) <- QQh, (SP-2) <- QQl, SP <- SP - 2
0305: f5      |        PUSH    AF                                              |(SP-1) <- QQh, (SP-2) <- QQl, SP <- SP - 2
0306: dde5    |        PUSH    IX                                              |(SP-1) <- IXh, (SP-2) <- IXl, SP <- SP - 2
0308: fde5    |        PUSH    IY                                              |(SP-1) <- IYh, (SP-2) <- IYl, SP <- SP - 2
030a: c1      |        POP     BC                                              |QQl <- (SP), QQh <- (SP+1), SP <- SP + 2
030b: dde1    |        POP     IX                                              |IXl <- (SP), IXh <- (SP+2), SP <- SP + 2
030d: 00      |        NOP                                                     |--
030e: 23      |        INC HL                                                  |RR <- RR + 1
030f: cb16    |        RL (HL)                                                 |CY <- (HL)[0], (HL) <- ROR( (HL) ,1)
0311: 3e5d    |        LD A,TFCB                                               |r <- n
0313: 212312  |        LD HL,1223H                                             |Register pair <- nn
0316:*010002  |        LD BC, buf                                              |Register pair <- nn
In mini.asm(297) E0119: Jump target to far away for RELATIVE jump! Skipping!
0319:         |        JR hallo                                                |PC <- PC + ee
0319: c30001  |        JP hallo                                                |PC <- nn
031c:         |
031c:         |TFCC    EQU     $
031c:         |TFCD    EQU     $+20
031c:         |
031c:         |hallo2:
031c: 7e      |        LD A,(HL)                                               |r <- (HL)
031d: 02      |        LD (BC),A                                               |(BC) <- A
031e: 320500  |        LD (5),A                                                |(nn) <- A
0321: dd7e05  |        LD A,(IX+5h)                                            |r <- (IX+d)
0324: fd770c  |        LD (IY+12),A                                            |(IY+d) <- r
0327:*ed4b0002|        LD BC,(buf)                                             |RRh <- (nn+1), RRl <- (nn)
032b:*210402  |        LD HL,buf2                                              |Register pair <- nn
032e:         |;
032e:         |;   Routine to convert (A) into upper case ascii. Only letters
032e:         |; are affected.
032e:         |;
032e: fe61    |UPPER:  CP      'a'             ;check for letters in the range…|Z <-  A = n
0332:         |                                                  of 'a' to 'z'.
0330: d8      |        RET     C                                               |IF cc true, PCl <- (SP), PCh <- (SP), SP <- SP + 2
0331: fe7b    |        CP      '{'                                             |Z <-  A = n
0333: d0      |        RET     NC                                              |IF cc true, PCl <- (SP), PCh <- (SP), SP <- SP + 2
0334: e65f    |        AND     5FH             ;convert it if found.           |A <- A & n
0336: c9      |        RET                                                     |PCl <- (SP), PCh <- (SP), SP <- SP + 2
0337:         |
0337:         |        ORG $200
0200:         |
0200: 01020304|buf:    DB 1,2,3,4,
0204: 05060708|buf2:   DB 5,6,7,8,9,10
0208: 090a    |                                                                
020a:         |
020a: 0002    |buf4:   DEFW $200
020c:         |
020c: a55a    |buf6:   DEFW $5aa5
020e: 5aa5    |        DEFW $a55a
0210: 3412    |        DEFW $1234
0212: 2143    |        DEFW $4321
0214:         |
0214: 2b      |buf7:   DB      43
0215: 2c      |        DB      44
0216: 2d      |        DB      45
0217: ff      |        DB      255
0218:         |
0218:         |buf3:    ; arithmetic test suite ... see http://benryves.com/bin/brass/manual.htm#labels
In mini.asm(340) E0109: -1 cannot be evaluated as sequence of bytes! Skipping!
0218:*????    |        DEFW    -1                      ; $ffff
In mini.asm(341) E0109: -2 cannot be evaluated as sequence of bytes! Skipping!
021a:*????    |        DEFW    -2                      ; $feff
021c: 1600    |        DEFW    17+5                    ; $16
021e: 0c00    |        DEFW    17-5                    ; $0c
0220: 5500    |        DEFW    17*5                    ; $55
0222: 0300    |        DEFW    17/5                    ; $03
0224: 0200    |        DEFW    17%5                    ; $02
0226: 0700    |        DEFW    15&7                    ; $07
0228: 0700    |        DEFW    4|3                     ; $07
022a: 0c00    |        DEFW    3^15                    ; $0c
022c: 0000    |        DEFW    !1                      ; $00
022e: 0100    |        DEFW    !0                      ; $01
In mini.asm(352) E0109: ~1 cannot be evaluated as sequence of bytes! Skipping!
0230:*????    |        DEFW    ~1                      ; $feff
0232: 0100    |        DEFW    1 && 1                  ; $01
0234: 0000    |        DEFW    1 && 0                  ; $00
0236: 0100    |        DEFW    1 || 0                  ; $01
0238: 0001    |        DEFW    1 << 8                  ; $0001
023a: 0200    |        DEFW    8 >> 2                  ; $02
023c: 0600    |        DEFW    5 +  1                  ; $04
023e: 0100    |        DEFW    8 == 4*2                ; $01
0240: 0000    |        DEFW    1+2 != 2+1              ; $00
0242: 0100    |        DEFW    7 < 15                  ; $01
0244: 0000    |        DEFW    15 < 7                  ; $00
0246: 0000    |        DEFW    7 > 15                  ; $00
0248: 0100    |        DEFW    15 > -15                ; $01
024a: 0100    |        DEFW    4 <= 4                  ; $01
024c: 0100    |        DEFW    -4 <= -4                ; $01
024e: 46      |        DEFB    33*2+4                  ; $46
024f: 09      |        DEFB    2*(36-(2*2))/ 17 *3     ; $03
0250: 01020304|        DEFB    1,2,3,4,5,6,7
0254: 050607  |                                                                
0257: 48616c6c|        DEFB    'Hallo \n\\\xaa\x55\r world!'
025b: 6f200a5c|                                                                
025f: aa550d20|                                                                
0263: 776f726c|                                                                
0267: 6421    |                                                                
0269:         |
0269:         |buf5:   EQU 2000h
0269: 22564c6f|        DEFB    34,56h,"Long term evolution\0\0"
026d: 6e672074|                                                                
0271: 65726d20|                                                                
0275: 65766f6c|                                                                
0279: 7574696f|                                                                
027d: 6e0000  |                                                                
0280:         |
0280:         |        ORG $600
0600:         |
0600: 00000000|buftmp: DEFB    0,0,0,0
0604:         |
0604: 00000000|spstrt: DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0608: 00000000|                                                                
060c: 00000000|                                                                
0610: 00000000|                                                                
0614: 00000000|        DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0618: 00000000|                                                                
061c: 00000000|                                                                
0620: 00000000|                                                                
0624: 00000000|        DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0628: 00000000|                                                                
062c: 00000000|                                                                
0630: 00000000|                                                                
0634: 00000000|        DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0638: 00000000|                                                                
063c: 00000000|                                                                
0640: 00000000|                                                                
0644: ff      |spend:  DEFB 255
||  Stage 2 completed. 109 errors, 6 invalid bytes remaining!

; +++ global symbols +++

BUF5     = $2000 =  8192 is Equ         ; expr = 2000h
ENTRY    = $0005 =     5 is Equ         ; expr = 5
TFCA     = $005c =    92 is Equ         ; expr = 5CH
TFCB     = $005d =    93 is Equ         ; expr = TFCA+1
TFCC     = $031c =   796 is Equ         ; expr = $
TFCD     = $0014 =    20 is Equ         ; expr = $+20
BUF      = $0200 =   512 is Label       
BUF2     = $0204 =   516 is Label       
BUF3     = $0218 =   536 is Label       
BUF4     = $020a =   522 is Label       
BUF6     = $020c =   524 is Label       
BUF7     = $0214 =   532 is Label       
BUFTMP   = $0600 =  1536 is Label       
HALLO    = $0100 =   256 is Label       
HALLO2   = $031c =   796 is Label       
SPEND    = $0644 =  1604 is Label       
SPSTRT   = $0604 =  1540 is Label       
UPPER    = $032e =   814 is Label       
||  Writing binary bytes to: mini.rom
||  Found minimal org pos to be $100 = 256, last byte to be $644 = 1604
*MARK*
||  Writing completed. 1349 bytes written
