||  DiZZy v0.1, dead slow Z80 assembler tools, (c) 2017 Michael Hoffmeister
||  Loading tables z80_isa.csv, z80_syms.csv..
||  Assembling mini.asm..
||  Starting assemble stage 1 for: mini.asm..
In mini.asm(194) E0119: Jump target to far away for RELATIVE jump! Skipping!
*MARK*
||  Stage 1 completed.
||  Starting assemble stage 2 ..
0000:         |;------------------------------
0000:         |ENTRY   EQU     5               ;entry point for the cp/m bdos.
0000:         |TFCA    EQU     5CH             ;default file control block.
0000:         |TFCB    EQU     TFCA+1
0000:         |;------------------------------
0000:         |        ORG 100h
0100:         |        ;
0100:         |hallo:  ; RRC further
0100:*dd210006|        LD      IX,buftmp       ; not a constant one            |IX <- nn
0104: 3e31    |        LD      A,00110001b                                     |r <- n
0106: dd7703  |        LD      (IX+3),A                                        |(IX+d) <- r
0109: b7      |        OR      A               ; clears carry?                 |A <- A | r
010a: ddcb030e|        RRC     (IX+3)          ; shall by CY, $98              |[CY,(IX+d)] <- ROL([CY,(IX+d)], 1)
010e: dd4603  |        LD      B,(IX+3)                                        |r <- (IX+d)
0111: 00      |        NOP                                                     |--
0112: 00      |        NOP                                                     |--
0113:         |        ; RR further
0113:*210006  |        LD      HL,buftmp       ; not a constant one            |Register pair <- nn
0116: 3edd    |        LD      A,11011101b                                     |r <- n
0118: 77      |        LD      (HL),A                                          |(HL) <- r
0119: b7      |        OR      A               ; clears carry?                 |A <- A | r
011a: cb1e    |        RR      (HL)            ; shall by CY, $6e              |[(HL),CY] <- ROR([(HL),CY], 1)
011c: 46      |        LD      B,(HL)                                          |r <- (HL)
011d: 00      |        NOP                                                     |--
011e: 00      |        NOP                                                     |--
011f:         |        ; RL further
011f:*fd210006|        LD      IY,buftmp       ; not a constant one            |IY <- nn
0123: 3e8f    |        LD      A,10001111b                                     |r <- n
0125: fd7704  |        LD      (IY+4),A                                        |(IY+d) <- r
0128: fdcb0416|        RL      (IY+4)          ; shall by CY, $1e              |CY <- (IY+d)[0], (IY+d) <- ROR( (IY+d) ,1)
012c: fd4602  |        LD      B,(IY+2)                                        |r <- (IY+d)
012f: 00      |        NOP                                                     |--
0130: 00      |        NOP                                                     |--
0131: 0688    |        LD      B,10001000b                                     |r <- n
0133: cb10    |        RL      B               ; shall be CY, %00010001 = $11  |CY <- r[0], r <- ROR(r,1)
0135: 00      |        NOP                                                     |--
0136:*210006  |        LD      HL,buftmp       ; not a constant one            |Register pair <- nn
0139: 3ecc    |        LD      A,11001100b                                     |r <- n
013b: 77      |        LD      (HL),A                                          |(HL) <- r
013c: cb16    |        RL      (HL)            ; shall by CY, $99              |CY <- (HL)[0], (HL) <- ROR( (HL) ,1)
013e: 7e      |        LD      A,(HL)                                          |r <- (HL)
013f: 00      |        NOP                                                     |--
0140:         |        ; RLC further
0140:*fd210006|        LD      IY,buftmp       ; not a constant one            |IY <- nn
0144: 3ecc    |        LD      A,11001100b                                     |r <- n
0146: fd7704  |        LD      (IY+4),A                                        |(IY+d) <- r
0149: fdcb0406|        RLC     (IY+4)          ; shall by CY, $99              |CY <- (IY+d)[7], (IY+d) <- ROL( (IY+d) ,1)
014d: fd4602  |        LD      B,(IY+2)                                        |r <- (IY+d)
0150: 00      |        NOP                                                     |--
0151: 00      |        NOP                                                     |--
0152: 0688    |        LD      B,10001000b                                     |r <- n
0154: cb00    |        RLC     B               ; shall be CY, %00010001 = $11  |CY <- r[7], r <- ROL(r,1)
0156: 00      |        NOP                                                     |--
0157:*210006  |        LD      HL,buftmp       ; not a constant one            |Register pair <- nn
015a: 3ecc    |        LD      A,11001100b                                     |r <- n
015c: 77      |        LD      (HL),A                                          |(HL) <- r
015d: cb06    |        RLC     (HL)            ; shall by CY, $99              |CY <- (HL)[7], (HL) <- ROL( (HL) ,1)
015f: 7e      |        LD      A,(HL)                                          |r <- (HL)
0160: 00      |        NOP                                                     |--
0161:         |        ; RRA
0161: 3ee1    |        LD      A,11100001b                                     |r <- n
0163: b7      |        OR      A                                               |A <- A | r
0164: 1f      |        RRA                     ; shall be CY, %01110000 = $70  |[A,CY] <- ROR([A,CY], 1)
0165: 00      |        NOP                                                     |--
0166:         |        ; RRCA
0166: 3e11    |        LD      A,00010001b                                     |r <- n
0168: 0f      |        RRCA                    ; shall be CY, %10001000 = $88  |CY <- A[0], A <- ROR(A,1)
0169: 00      |        NOP                                                     |--
016a:         |        ; RLA
016a: 3e76    |        LD      A,01110110b                                     |r <- n
016c: 37      |        SCF                                                     |CY <- 1
016d: 17      |        RLA                     ; shall be no CY, %11101101 = $…|[CY,A] <- ROL([CY,A], 1)
0171:         |                                                              ed
016e: 00      |        NOP                                                     |--
016f:         |        ; RLCA
016f: 3e81    |        LD      A,10000001b                                     |r <- n
0171: 07      |        RLCA                    ; shall be CY, %00000011 = $03  |CY <- A[7], A <- ROL(A,1)
0172: 00      |        NOP                                                     |--
0173:         |        ; XOR
0173: 3e55    |        LD      A, $55                                          |r <- n
0175: 06aa    |        LD      B, $aa                                          |r <- n
0177: a8      |        XOR     B               ; shall be $ff                  |A <- A + r
0178: ee01    |        XOR     $01             ; shall be $fe, Signed          |A <- A + n
017a:*dd211402|        LD      IX,buf7         ; is 43, 44, 45, 255            |IX <- nn
017e: ddae03  |        XOR     (IX+3)          ; $01                           |A <- A + (IX+d)
0181: 00      |        NOP                                                     |--
0182:         |        ; AND
0182: 3eff    |        LD      A, $ff                                          |r <- n
0184: 06aa    |        LD      B, $aa                                          |r <- n
0186: a0      |        AND     B               ; shall be $aa                  |A <- A & r
0187: e622    |        AND      $22            ; shall be $22                  |A <- A & n
0189:*210402  |        LD      HL,buf2         ; is 5                          |Register pair <- nn
018c: a6      |        AND      (HL)           ; $00, Zero                     |A <- A & (HL)
018d: 00      |        NOP                                                     |--
018e:         |        ; OR
018e: 3e55    |        LD      A, $55                                          |r <- n
0190: 06aa    |        LD      B, $aa                                          |r <- n
0192: b0      |        OR      B               ; shall be $ff                  |A <- A | r
0193: 3e11    |        LD      A, $11                                          |r <- n
0195: f688    |        OR      $88             ; shall be $99                  |A <- A | n
0197:*210402  |        LD      HL,buf2         ; is 5                          |Register pair <- nn
019a: b6      |        OR      (HL)            ; $99+5 = $9d                   |A <- A | (HL)
019b: 37      |        SCF                     ; CY is 1                       |CY <- 1
019c: b7      |        OR      A               ; still $9d, but CY is 0        |A <- A | r
019d: 00      |        NOP                                                     |--
019e:         |        ; ADD
019e: 3e2a    |        LD      A,42                                            |r <- n
01a0: 47      |        LD      B,A                                             |r <- s
01a1: 80      |        ADD     A,B             ; 84, kein Carry                |A <- A + r
01a2: 0ee6    |        LD      C,230                                           |r <- n
01a4: 81      |        ADD     A,C             ; 84 + 230 -> 58, Carry!        |A <- A + r
01a5:         |        ; SUB
01a5: 3e3a    |        LD      A,58                                            |r <- n
01a7: 1637    |        LD      D,55                                            |r <- n
01a9: 92      |        SUB     D               ; shall be 3,                   |A <- A - r
01aa: d603    |        SUB     3               ; shall be 0, Sign              |A <- A - n
01ac:*dd210002|        LD      IX,buf          ; buf = 1,2,3,4..               |IX <- nn
01b0: dd9600  |        SUB     (IX+0)          ; A shall be $ff                |A <- A - (IX+d)
01b3:*fd210002|        LD      IY,buf                                          |IY <- nn
01b7: fd9601  |        SUB     (IY+1)          ; A shall be $fd                |A <- A + (IY+d)
01ba:         |        ; SBC (with Carry)
01ba: 3e3b    |        LD      A,59                                            |r <- n
01bc: 1637    |        LD      D,55                                            |r <- n
01be: 37      |        SCF                     ; set CY                        |CY <- 1
01bf: 9a      |        SBC     A,D             ; shall be 3,                   |A <- A + r + CY
01c0: 37      |        SCF                     ; set CY                        |CY <- 1
01c1: de03    |        SBC     A,3             ; shall be ff, Carry (Borrow!)  |A <- A + n + CY
01c3:*dd210002|        LD      IX,buf          ; buf = 1,2,3,4..               |IX <- nn
01c7: dd9e00  |        SBC     A,(IX+0)        ; A shall be $ff                |A <- A + (IX+d) + CY
01ca:*fd210002|        LD      IY,buf                                          |IY <- nn
01ce: fd9e01  |        SBC     A,(IY+1)        ; A shall be $fd                |A <- A + (IY+d) + CY
01d1: c62a    |        ADD     A,42            ; shall be 42 again             |A <- A + n
01d3:*211402  |        LD      HL,buf7                                         |Register pair <- nn
01d6: 86      |        ADD     A,(HL)          ; 85                            |A <- A + (HL)
01d7:*dd211402|        LD      IX,buf7                                         |IX <- nn
01db: dd8602  |        ADD     A,(IX+2)        ; 85 + 45 = 130                 |A <- A + (IX+d)
01de: 00      |        NOP                                                     |--
01df:*dd210002|        LD      IX,buf                                          |IX <- nn
01e3: dd4e01  |        LD      C,(IX+1)                                        |r <- (IX+d)
01e6:*210402  |        LD      HL,buf2                                         |Register pair <- nn
01e9: 71      |        LD      (HL),C                                          |(HL) <- r
01ea: 56      |        LD      D,(HL)                                          |r <- (HL)
01eb: dd72fe  |        LD      (IX+-2),D                                       |(IX+d) <- r
01ee: 365a    |        LD      (HL),$5a                                        |(HL) <- n
01f0: dd36fca5|        LD      (IX+-4),$a5                                     |(IX+d) <- n
01f4: 0a      |        LD      A,(BC)                                          |A <- (BC)
01f5: 3e0b    |        LD      A,11                                            |r <- n
01f7:*3a0702  |        LD      A,(buf2+3)                                      |A <- (nn)
01fa: 3e55    |        LD      A,$55                                           |r <- n
01fc:*010002  |        LD      BC,buf                                          |Register pair <- nn
01ff: 02      |        LD      (BC),A                                          |(BC) <- A
0200: 3e77    |        LD      A,$77                                           |r <- n
0202:*110002  |        LD      DE,buf                                          |Register pair <- nn
0205: 12      |        LD      (DE),A                                          |(DE) <- A
0206: 3e99    |        LD      A,$99                                           |r <- n
0208:*320002  |        LD      (buf),A                                         |(nn) <- A
020b: 3e32    |        LD      A,$32                                           |r <- n
020d: ed47    |        LD      I,A                                             |Interrupt vector reg <- A
020f: 3e43    |        LD      A,$43                                           |r <- n
0211: ed4f    |        LD      R,A                                             |Memory refresh reg <- A
0213: ed57    |        LD      A,I                     ; A to be $32           |A <- Interrupt vector reg
0215: ed5f    |        LD      A,R                     ; A to be $43           |A <- Memory refresh reg
0217:*dd210002|        LD      IX,buf                                          |IX <- nn
021b: fd21aa55|        LD      IY,$55aa                                        |IY <- nn
021f:*2a0a02  |        LD      HL,(buf4)               ; HL to be $200         |H <- (nn+1), L <- (nn)
0222:*ed4b0002|        LD      BC,(buf)                ; BC to be $0201        |RRh <- (nn+1), RRl <- (nn)
0226:*ed5b0102|        LD      DE,(buf+1)              ; DE to be $0302        |RRh <- (nn+1), RRl <- (nn)
022a:*ed7b0202|        LD      SP,(buf+2)              ; SP to be $0403        |RRh <- (nn+1), RRl <- (nn)
022e:*dd2a0302|        LD      IX,(buf+3)              ; SP to be $0504        |IXh <- (nn+1), IXl <- (nn)
0232:*fd2a0402|        LD      IY,(buf+4)              ; SP to be $0605        |IYh <- (nn+1), IYl <- (nn)
0236:*220c02  |        LD      (buf6),HL                                       |(nn+1) <- H, (nn) <- L
0239:*ed430102|        LD      (buf+1),BC                                      |(nn+1) <- RRh, (nn) <-RRl
023d:*ed530202|        LD      (buf+2),DE                                      |(nn+1) <- RRh, (nn) <-RRl
0241:*ed730302|        LD      (buf+3),SP                                      |(nn+1) <- RRh, (nn) <-RRl
0245:*dd220402|        LD      (buf+4),IX                                      |(nn+1) <- IXh, (nn) <-IXl
0249:*fd220502|        LD      (buf+5),IY                                      |(nn+1) <- IYh, (nn) <-IYl
024d: f9      |        LD      SP,HL                                           |SP <- HL
024e: ddf9    |        LD      SP,IX                                           |SP <- IX
0250: fdf9    |        LD      SP,IY                                           |SP <- IY
0252:*314406  |        LD      SP,spend                                        |Register pair <- nn
0255: c5      |        PUSH    BC                                              |(SP-1) <- QQh, (SP-2) <- QQl, SP <- SP - 2
0256: d5      |        PUSH    DE                                              |(SP-1) <- QQh, (SP-2) <- QQl, SP <- SP - 2
0257: e5      |        PUSH    HL                                              |(SP-1) <- QQh, (SP-2) <- QQl, SP <- SP - 2
0258: f5      |        PUSH    AF                                              |(SP-1) <- QQh, (SP-2) <- QQl, SP <- SP - 2
0259: dde5    |        PUSH    IX                                              |(SP-1) <- IXh, (SP-2) <- IXl, SP <- SP - 2
025b: fde5    |        PUSH    IY                                              |(SP-1) <- IYh, (SP-2) <- IYl, SP <- SP - 2
025d: c1      |        POP     BC                                              |QQl <- (SP), QQh <- (SP+1), SP <- SP + 2
025e: dde1    |        POP     IX                                              |IXl <- (SP), IXh <- (SP+2), SP <- SP + 2
0260: 00      |        NOP                                                     |--
0261: 23      |        INC HL                                                  |RR <- RR + 1
0262: cb16    |        RL (HL)                                                 |CY <- (HL)[0], (HL) <- ROR( (HL) ,1)
0264: 3e5d    |        LD A,TFCB                                               |r <- n
0266: 212312  |        LD HL,1223H                                             |Register pair <- nn
0269:*010002  |        LD BC, buf                                              |Register pair <- nn
In mini.asm(194) E0119: Jump target to far away for RELATIVE jump! Skipping!
026c:         |        JR hallo                                                |PC <- PC + ee
026c: c30001  |        JP hallo                                                |PC <- nn
026f:         |
026f:         |TFCC    EQU     $
026f:         |TFCD    EQU     $+20
026f:         |
026f:         |hallo2:
026f: 7e      |        LD A,(HL)                                               |r <- (HL)
0270: 02      |        LD (BC),A                                               |(BC) <- A
0271: 320500  |        LD (5),A                                                |(nn) <- A
0274: dd7e05  |        LD A,(IX+5h)                                            |r <- (IX+d)
0277: fd770c  |        LD (IY+12),A                                            |(IY+d) <- r
027a:*ed4b0002|        LD BC,(buf)                                             |RRh <- (nn+1), RRl <- (nn)
027e:*210402  |        LD HL,buf2                                              |Register pair <- nn
0281:         |;
0281:         |;   Routine to convert (A) into upper case ascii. Only letters
0281:         |; are affected.
0281:         |;
0281: fe61    |UPPER:  CP      'a'             ;check for letters in the range…|Z <-  A = n
0285:         |                                                  of 'a' to 'z'.
0283: d8      |        RET     C                                               |IF cc true, PCl <- (SP), PCh <- (SP), SP <- SP + 2
0284: fe7b    |        CP      '{'                                             |Z <-  A = n
0286: d0      |        RET     NC                                              |IF cc true, PCl <- (SP), PCh <- (SP), SP <- SP + 2
0287: e65f    |        AND     5FH             ;convert it if found.           |A <- A & n
0289: c9      |        RET                                                     |PCl <- (SP), PCh <- (SP), SP <- SP + 2
028a:         |
028a:         |        ORG $200
0200:         |
0200: 01020304|buf:    DB 1,2,3,4,
0204: 05060708|buf2:   DB 5,6,7,8,9,10
0208: 090a    |                                                                
020a:         |
020a: 0002    |buf4:   DEFW $200
020c:         |
020c: a55a    |buf6:   DEFW $5aa5
*MARK*
020e: 5aa5    |        DEFW $a55a
0210: 3412    |        DEFW $1234
0212: 2143    |        DEFW $4321
0214:         |
0214: 2b      |buf7:   DB      43
0215: 2c      |        DB      44
0216: 2d      |        DB      45
0217: ff      |        DB      255
0218:         |
0218:         |buf3:    ; arithmetic test suite ... see http://benryves.com/bin/brass/manual.htm#labels
In mini.asm(237) E0109: -1 cannot be evaluated as sequence of bytes! Skipping!
0218:*????    |        DEFW    -1                      ; $ffff
In mini.asm(238) E0109: -2 cannot be evaluated as sequence of bytes! Skipping!
021a:*????    |        DEFW    -2                      ; $feff
021c: 1600    |        DEFW    17+5                    ; $16
021e: 0c00    |        DEFW    17-5                    ; $0c
0220: 5500    |        DEFW    17*5                    ; $55
0222: 0300    |        DEFW    17/5                    ; $03
0224: 0200    |        DEFW    17%5                    ; $02
0226: 0700    |        DEFW    15&7                    ; $07
0228: 0700    |        DEFW    4|3                     ; $07
022a: 0c00    |        DEFW    3^15                    ; $0c
022c: 0000    |        DEFW    !1                      ; $00
022e: 0100    |        DEFW    !0                      ; $01
In mini.asm(249) E0109: ~1 cannot be evaluated as sequence of bytes! Skipping!
0230:*????    |        DEFW    ~1                      ; $feff
0232: 0100    |        DEFW    1 && 1                  ; $01
0234: 0000    |        DEFW    1 && 0                  ; $00
0236: 0100    |        DEFW    1 || 0                  ; $01
0238: 0001    |        DEFW    1 << 8                  ; $0001
023a: 0200    |        DEFW    8 >> 2                  ; $02
023c: 0600    |        DEFW    5 +  1                  ; $04
023e: 0100    |        DEFW    8 == 4*2                ; $01
0240: 0000    |        DEFW    1+2 != 2+1              ; $00
0242: 0100    |        DEFW    7 < 15                  ; $01
0244: 0000    |        DEFW    15 < 7                  ; $00
0246: 0000    |        DEFW    7 > 15                  ; $00
0248: 0100    |        DEFW    15 > -15                ; $01
024a: 0100    |        DEFW    4 <= 4                  ; $01
024c: 0100    |        DEFW    -4 <= -4                ; $01
024e: 46      |        DEFB    33*2+4                  ; $46
024f: 09      |        DEFB    2*(36-(2*2))/ 17 *3     ; $03
0250: 01020304|        DEFB    1,2,3,4,5,6,7
0254: 050607  |                                                                
0257: 48616c6c|        DEFB    'Hallo \n\\\xaa\x55\r world!'
025b: 6f200a5c|                                                                
025f: aa550d20|                                                                
0263: 776f726c|                                                                
0267: 6421    |                                                                
0269:         |
0269:         |buf5:   EQU 2000h
0269: 22564c6f|        DEFB    34,56h,"Long term evolution\0\0"
026d: 6e672074|                                                                
0271: 65726d20|                                                                
0275: 65766f6c|                                                                
0279: 7574696f|                                                                
027d: 6e0000  |                                                                
0280:         |
0280:         |        ORG $600
0600:         |
0600: 00000000|buftmp: DEFB    0,0,0,0
0604:         |
0604: 00000000|spstrt: DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0608: 00000000|                                                                
060c: 00000000|                                                                
0610: 00000000|                                                                
0614: 00000000|        DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0618: 00000000|                                                                
061c: 00000000|                                                                
0620: 00000000|                                                                
0624: 00000000|        DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0628: 00000000|                                                                
062c: 00000000|                                                                
0630: 00000000|                                                                
0634: 00000000|        DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0638: 00000000|                                                                
063c: 00000000|                                                                
0640: 00000000|                                                                
0644: ff      |spend:  DEFB 255
||  Stage 2 completed. 100 errors, 6 invalid bytes remaining!

; +++ global symbols +++

BUF5     = $2000 =  8192 is Equ         ; expr = 2000h
ENTRY    = $0005 =     5 is Equ         ; expr = 5
TFCA     = $005c =    92 is Equ         ; expr = 5CH
TFCB     = $005d =    93 is Equ         ; expr = TFCA+1
TFCC     = $026f =   623 is Equ         ; expr = $
TFCD     = $0014 =    20 is Equ         ; expr = $+20
BUF      = $0200 =   512 is Label       
BUF2     = $0204 =   516 is Label       
BUF3     = $0218 =   536 is Label       
BUF4     = $020a =   522 is Label       
BUF6     = $020c =   524 is Label       
BUF7     = $0214 =   532 is Label       
BUFTMP   = $0600 =  1536 is Label       
HALLO    = $0100 =   256 is Label       
HALLO2   = $026f =   623 is Label       
SPEND    = $0644 =  1604 is Label       
SPSTRT   = $0604 =  1540 is Label       
UPPER    = $0281 =   641 is Label       
||  Writing binary bytes to: mini.rom
||  Found minimal org pos to be $100 = 256, last byte to be $644 = 1604
*MARK*
||  Writing completed. 1349 bytes written
