||  DiZZy v0.1, dead slow Z80 assembler tools, (c) 2017 Michael Hoffmeister
||  Loading tables z80_isa.csv, z80_syms.csv..
||  Assembling mini.asm..
||  Starting assemble stage 1 for: mini.asm..
*MARK*
In mini.asm(76) E0119: Jump target to far away for RELATIVE jump! Skipping!
||  Stage 1 completed.
||  Starting assemble stage 2 ..
0000:         |;------------------------------
0000:         |ENTRY   EQU     5               ;entry point for the cp/m bdos.
0000:         |TFCA    EQU     5CH             ;default file control block.
0000:         |TFCB    EQU     TFCA+1
0000:         |;------------------------------
0000:         |        ORG 100h
0100:         |        ;
0100: 3e2a    |hallo:  LD      A,42                                            |r ← n
0102: 47      |        LD      B,A                                             |r ← s
0103: 80      |        ADD     A,B             ; 84, kein Carry                |A ← A + r
0104: 0ee6    |        LD      C,230                                           |r ← n
0106: 81      |        ADD     A,C             ; 84 + 230 -> 58, Carry!        |A ← A + r
0107: 163a    |        LD      D,58                                            |r ← n
0109: 92      |        SUB     D               ; shall be 0, Sign              |A ← A - r
010a: c62a    |        ADD     A,42            ; shall be 42 again             |A ← A + n
010c:*211402  |        LD      HL,buf7                                         |Register pair ← nn
010f: 86      |        ADD     A,(HL)          ; 85                            |A ← A + (HL)
0110: 00      |        NOP                                                     |--
0111:*dd210002|        LD      IX,buf                                          |IX ← nn
0115: dd4e01  |        LD      C,(IX+1)                                        |r ← (IX+d)
0118:*210402  |        LD      HL,buf2                                         |Register pair ← nn
011b: 71      |        LD      (HL),C                                          |(HL) ← r
011c: 56      |        LD      D,(HL)                                          |r ← (HL)
011d: dd72fe  |        LD      (IX+-2),D                                       |(IX+d) ← r
0120: 365a    |        LD      (HL),$5a                                        |(HL) ← n
0122: dd36fca5|        LD      (IX+-4),$a5                                     |(IX+d) ← n
0126: 0a      |        LD      A,(BC)                                          |A ← (BC)
0127: 3e0b    |        LD      A,11                                            |r ← n
0129:*3a0702  |        LD      A,(buf2+3)                                      |A ← (nn)
012c: 3e55    |        LD      A,$55                                           |r ← n
012e:*010002  |        LD      BC,buf                                          |Register pair ← nn
0131: 02      |        LD      (BC),A                                          |(BC) ← A
*MARK*
0132: 3e77    |        LD      A,$77                                           |r ← n
0134:*110002  |        LD      DE,buf                                          |Register pair ← nn
0137: 12      |        LD      (DE),A                                          |(DE) ← A
0138: 3e99    |        LD      A,$99                                           |r ← n
013a:*320002  |        LD      (buf),A                                         |(nn) ← A
013d: 3e32    |        LD      A,$32                                           |r ← n
013f: ed47    |        LD      I,A                                             |Interrupt vector reg ← A
0141: 3e43    |        LD      A,$43                                           |r ← n
0143: ed4f    |        LD      R,A                                             |Memory refresh reg ← A
0145: ed57    |        LD      A,I                     ; A to be $32           |A ← Interrupt vector reg
0147: ed5f    |        LD      A,R                     ; A to be $43           |A ← Memory refresh reg
0149:*dd210002|        LD      IX,buf                                          |IX ← nn
014d: fd21aa55|        LD      IY,$55aa                                        |IY ← nn
0151:*2a0a02  |        LD      HL,(buf4)               ; HL to be $200         |H ← (nn+1), L ← (nn)
0154:*ed4b0002|        LD      BC,(buf)                ; BC to be $0201        |RRh ← (nn+1), RRl ← (nn)
0158:*ed5b0102|        LD      DE,(buf+1)              ; DE to be $0302        |RRh ← (nn+1), RRl ← (nn)
015c:*ed7b0202|        LD      SP,(buf+2)              ; SP to be $0403        |RRh ← (nn+1), RRl ← (nn)
0160:*dd2a0302|        LD      IX,(buf+3)              ; SP to be $0504        |IXh ← (nn+1), IXl ← (nn)
0164:*fd2a0402|        LD      IY,(buf+4)              ; SP to be $0605        |IYh ← (nn+1), IYl ← (nn)
0168:*220c02  |        LD      (buf6),HL                                       |(nn+1) ← H, (nn) ← L
016b:*ed430102|        LD      (buf+1),BC                                      |(nn+1) ← RRh, (nn) ←RRl
016f:*ed530202|        LD      (buf+2),DE                                      |(nn+1) ← RRh, (nn) ←RRl
0173:*ed730302|        LD      (buf+3),SP                                      |(nn+1) ← RRh, (nn) ←RRl
0177:*dd220402|        LD      (buf+4),IX                                      |(nn+1) ← IXh, (nn) ←IXl
017b:*fd220502|        LD      (buf+5),IY                                      |(nn+1) ← IYh, (nn) ←IYl
017f: f9      |        LD      SP,HL                                           |SP ← HL
0180: ddf9    |        LD      SP,IX                                           |SP ← IX
0182: fdf9    |        LD      SP,IY                                           |SP ← IY
0184:*314006  |        LD      SP,spend                                        |Register pair ← nn
0187: c5      |        PUSH    BC                                              |(SP-1) ← QQh, (SP-2) ← QQl, SP ← SP - 2
0188: d5      |        PUSH    DE                                              |(SP-1) ← QQh, (SP-2) ← QQl, SP ← SP - 2
0189: e5      |        PUSH    HL                                              |(SP-1) ← QQh, (SP-2) ← QQl, SP ← SP - 2
018a: f5      |        PUSH    AF                                              |(SP-1) ← QQh, (SP-2) ← QQl, SP ← SP - 2
018b: dde5    |        PUSH    IX                                              |(SP-1) ← IXh, (SP-2) ← IXl, SP ← SP - 2
018d: fde5    |        PUSH    IY                                              |(SP-1) ← IYh, (SP-2) ← IYl, SP ← SP - 2
018f: c1      |        POP     BC                                              |QQl ← (SP), QQh ← (SP+1), SP ← SP + 2
0190: dde1    |        POP     IX                                              |IXl ← (SP), IXh ← (SP+2), SP ← SP + 2
0192: 00      |        NOP                                                     |--
0193: 23      |        INC HL                                                  |RR ← RR + 1
0194: cb16    |        RL (HL)                                                 |CY ← (HL)[0], (HL) ← ROR( (HL) ,1)
0196: 3e5d    |        LD A,TFCB                                               |r ← n
0198: 212312  |        LD HL,1223H                                             |Register pair ← nn
019b:*010002  |        LD BC, buf                                              |Register pair ← nn
In mini.asm(76) E0119: Jump target to far away for RELATIVE jump! Skipping!
019e:         |        JR hallo                                                |PC ← PC + ee
019e: c30001  |        JP hallo                                                |PC ← nn
01a1:         |
01a1:         |TFCC    EQU     $
01a1:         |TFCD    EQU     $+20
01a1:         |
01a1:         |hallo2:
01a1: 7e      |        LD A,(HL)                                               |r ← (HL)
01a2: 02      |        LD (BC),A                                               |(BC) ← A
01a3: 320500  |        LD (5),A                                                |(nn) ← A
In mini.asm(86) E0114: Unable to finally evaluate expression IX+5h ! Skipping!
01a6:*3a????  |        LD A,(IX+5h)                                            |A ← (nn)
In mini.asm(87) E0114: Unable to finally evaluate expression IY+12 ! Skipping!
01a9:*32????  |        LD (IY+12),A                                            |(nn) ← A
01ac:*ed4b0002|        LD BC,(buf)                                             |RRh ← (nn+1), RRl ← (nn)
01b0:*210402  |        LD HL,buf2                                              |Register pair ← nn
01b3:         |;
01b3:         |;   Routine to convert (A) into upper case ascii. Only letters
01b3:         |; are affected.
01b3:         |;
01b3: fe61    |UPPER:  CP      'a'             ;check for letters in the range…|Z ←  A = n
01b7:         |                                                  of 'a' to 'z'.
01b5: d8      |        RET     C                                               |IF cc true, PCl ← (SP), PCh ← (SP), SP ← SP + 2
01b6: fe7b    |        CP      '{'                                             |Z ←  A = n
01b8: d0      |        RET     NC                                              |IF cc true, PCl ← (SP), PCh ← (SP), SP ← SP + 2
01b9: e65f    |        AND     5FH             ;convert it if found.           |A ← A & n
01bb: c9      |        RET                                                     |PCl ← (SP), PCh ← (SP), SP ← SP + 2
01bc:         |
01bc:         |        ORG $200
0200:         |
0200: 01020304|buf:    DB 1,2,3,4,
0204: 05060708|buf2:   DB 5,6,7,8,9,10
0208: 090a    |                                                                
020a:         |
020a: 0002    |buf4:   DEFW $200
020c:         |
020c: a55a    |buf6:   DEFW $5aa5
020e: 5aa5    |        DEFW $a55a
0210: 3412    |        DEFW $1234
0212: 2143    |        DEFW $4321
0214:         |
0214: 2b      |buf7:   DB      43
0215:         |
0215:         |buf3:    ; arithmetic test suite ... see http://benryves.com/bin/brass/manual.htm#labels
In mini.asm(116) E0109: -1 cannot be evaluated as sequence of bytes! Skipping!
0215:*????    |        DEFW    -1                      ; $ffff
In mini.asm(117) E0109: -2 cannot be evaluated as sequence of bytes! Skipping!
0217:*????    |        DEFW    -2                      ; $feff
0219: 1600    |        DEFW    17+5                    ; $16
021b: 0c00    |        DEFW    17-5                    ; $0c
021d: 5500    |        DEFW    17*5                    ; $55
021f: 0300    |        DEFW    17/5                    ; $03
0221: 0200    |        DEFW    17%5                    ; $02
0223: 0700    |        DEFW    15&7                    ; $07
0225: 0700    |        DEFW    4|3                     ; $07
0227: 0c00    |        DEFW    3^15                    ; $0c
0229: 0000    |        DEFW    !1                      ; $00
022b: 0100    |        DEFW    !0                      ; $01
In mini.asm(128) E0109: ~1 cannot be evaluated as sequence of bytes! Skipping!
022d:*????    |        DEFW    ~1                      ; $feff
022f: 0100    |        DEFW    1 && 1                  ; $01
0231: 0000    |        DEFW    1 && 0                  ; $00
0233: 0100    |        DEFW    1 || 0                  ; $01
0235: 0001    |        DEFW    1 << 8                  ; $0001
0237: 0200    |        DEFW    8 >> 2                  ; $02
0239: 0600    |        DEFW    5 +  1                  ; $04
023b: 0100    |        DEFW    8 == 4*2                ; $01
023d: 0000    |        DEFW    1+2 != 2+1              ; $00
023f: 0100    |        DEFW    7 < 15                  ; $01
0241: 0000    |        DEFW    15 < 7                  ; $00
0243: 0000    |        DEFW    7 > 15                  ; $00
0245: 0100    |        DEFW    15 > -15                ; $01
0247: 0100    |        DEFW    4 <= 4                  ; $01
0249: 0100    |        DEFW    -4 <= -4                ; $01
024b: 46      |        DEFB    33*2+4                  ; $46
024c: 09      |        DEFB    2*(36-(2*2))/ 17 *3     ; $03
024d: 01020304|        DEFB    1,2,3,4,5,6,7
0251: 050607  |                                                                
0254: 48616c6c|        DEFB    'Hallo \n\\\xaa\x55\r world!'
0258: 6f200a5c|                                                                
025c: aa550d20|                                                                
0260: 776f726c|                                                                
0264: 6421    |                                                                
0266:         |
0266:         |buf5:   EQU 2000h
0266: 22564c6f|        DEFB    34,56h,"Long term evolution\0\0"
026a: 6e672074|                                                                
026e: 65726d20|                                                                
0272: 65766f6c|                                                                
0276: 7574696f|                                                                
027a: 6e0000  |                                                                
027d:         |
027d:         |        ORG $600
0600:         |
0600: 00000000|spstrt: DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0604: 00000000|                                                                
0608: 00000000|                                                                
060c: 00000000|                                                                
0610: 00000000|        DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0614: 00000000|                                                                
0618: 00000000|                                                                
061c: 00000000|                                                                
0620: 00000000|        DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0624: 00000000|                                                                
0628: 00000000|                                                                
062c: 00000000|                                                                
0630: 00000000|        DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0634: 00000000|                                                                
0638: 00000000|                                                                
063c: 00000000|                                                                
0640: ff      |spend:  DEFB 255
||  Stage 2 completed. 85 errors, 10 invalid bytes remaining!

; +++ global symbols +++

BUF5     = $2000 =  8192 is Equ         ; expr = 2000h
ENTRY    = $0005 =     5 is Equ         ; expr = 5
TFCA     = $005c =    92 is Equ         ; expr = 5CH
TFCB     = $005d =    93 is Equ         ; expr = TFCA+1
TFCC     = $01a1 =   417 is Equ         ; expr = $
TFCD     = $0014 =    20 is Equ         ; expr = $+20
BUF      = $0200 =   512 is Label       
BUF2     = $0204 =   516 is Label       
BUF3     = $0215 =   533 is Label       
BUF4     = $020a =   522 is Label       
BUF6     = $020c =   524 is Label       
BUF7     = $0214 =   532 is Label       
HALLO    = $0100 =   256 is Label       
HALLO2   = $01a1 =   417 is Label       
SPEND    = $0640 =  1600 is Label       
SPSTRT   = $0600 =  1536 is Label       
UPPER    = $01b3 =   435 is Label       
||  Writing binary bytes to: mini.rom
||  Found minimal org pos to be $100 = 256, last byte to be $640 = 1600
*MARK*
||  Writing completed. 1345 bytes written
